import { ColorSwatchProps } from './ColorSwatch';
type Colors = Record<string, string | {
    [key: string]: Colors;
}>;
export interface ColorRowProps extends Omit<ColorSwatchProps, 'color'> {
    colors: Colors;
    name?: string;
    omit?: string[];
    render?: (value: {
        swatch: React.ReactElement;
        color: string;
        key: string;
        name: string;
    }) => React.ReactNode;
    size?: number | string;
}
export declare const ColorRow: ({ colors, name, omit, render, size, ...props }: ColorRowProps) => import("react").JSX.Element;
export interface ColorPaletteProps extends Omit<ColorRowProps, 'colors'> {
    omit?: string[];
    mode?: string;
}
export declare const ColorPalette: ({ omit, mode, ...props }: ColorPaletteProps) => import("react").JSX.Element;
export default ColorPalette;
